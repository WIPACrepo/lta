name: "CI/CD"

on:
  # only on branch pushes
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  mongo-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - id: versions
        uses: WIPACrepo/wipac-dev-mongo-versions-action@v2
        with:
          mongo_min: "5.0"

  py-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v2.6

  flake8:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-flake8-action@v1.3
        with:
          max-complexity: 10  # ideal is ~10-15

  mypy:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-mypy-action@v2.0

  py-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ github.ref }}  # dont lock to sha (action needs to push)
      - uses: WIPACrepo/wipac-dev-py-setup-action@v5.1
        with:
          mode: PACKAGING
          python_min: "3.11"  # asyncio.TaskGroup
          author: WIPAC Developers
          author_email: developers@icecube.wisc.edu
          keywords_comma: "archive, data, IceCube, WIPAC"
          auto_mypy_option: True

  # py-dependencies:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #         ref: ${{ github.ref }}  # dont lock to sha (action needs to push)
  #     - uses: WIPACrepo/wipac-dev-py-dependencies-action@v3.0

  pip-install:
    needs: [ py-setup, py-versions ]
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 8
      fail-fast: false
      matrix: ${{ fromJSON(needs.py-versions.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py3_versions }}
      - name: "pip install --upgrade pip wheel setuptools"
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          pip install --upgrade pip wheel setuptools
          pip install --editable .

  profile:
    needs: [ mongo-versions, py-setup, py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
        mongodb-version: ${{ fromJSON(needs.mongo-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)

      - name: Start MongoDB v${{ matrix.mongodb-version }}
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py3 }}

      - name: Pytest
        env:
          CI_TEST_ENV: true
          LTA_MONGODB_HOST: localhost
          LTA_MONGODB_PORT: 27017
          WIPACTEL_EXPORT_STDOUT: false
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          pip install --upgrade pip wheel setuptools pytest
          pip install .[dev]
          resources/enable_profiling.py
          pytest -vvvvv --tb=short tests
          resources/profile_queries.py
