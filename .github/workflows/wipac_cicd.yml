name: "CI/CD"

on:
  # only on branch pushes
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'


env:
  CI_DOCKER_IMAGE_W_TAG: lta/test:local


jobs:

  #############################################################################
  # TOOLS FOR SETTING UP MATRIX-BASED JOBS
  #############################################################################

  mongo-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - id: versions
        uses: WIPACrepo/wipac-dev-mongo-versions-action@v2
        with:
          mongo_min: "5.0"

  py-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v2.7


  #############################################################################
  # LINTERS
  #############################################################################

  flake8:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-flake8-action@v1.3
        with:
          max-complexity: 10  # ideal is ~10-15

  mypy:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
          fetch-depth: 0  # setuptools-scm needs to access git tags
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-mypy-action@v2.0


  #############################################################################
  # PACKAGING
  #############################################################################

  py-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ github.ref }}  # dont lock to sha (action needs to push)
      - uses: WIPACrepo/wipac-dev-py-setup-action@v5.2
        with:
          mode: PACKAGING
          python_min: "3.11"  # asyncio.TaskGroup
          author: WIPAC Developers
          author_email: developers@icecube.wisc.edu
          keywords_comma: "archive, data, IceCube, WIPAC"
          auto_mypy_option: True

  py-dependencies:
    needs: [ flake8 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
          fetch-depth: 0  # setuptools-scm needs to access git tags
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: lta:py-dep-this
          load: true
      - uses: WIPACrepo/wipac-dev-py-dependencies-action@v3.2


  ############################################################################
  # TESTS
  #############################################################################

  pip-install:
    needs: [ py-setup, py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
          fetch-depth: 0  # setuptools-scm needs to access git tags
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - name: "source ./tools/setupenv.sh"
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          source ./tools/setupenv.sh

  unit-tests:
    needs: [ mongo-versions, py-setup, py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
        mongodb-version: ${{ fromJSON(needs.mongo-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
          fetch-depth: 0  # setuptools-scm needs to access git tags
      - name: Start MongoDB v${{ matrix.mongodb-version }}
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - name: Pytest
        env:
          CI_TEST_ENV: true
          LTA_MONGODB_HOST: localhost
          LTA_MONGODB_PORT: 27017
          WIPACTEL_EXPORT_STDOUT: false
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          source ./tools/setupenv.sh
          resources/enable_profiling.py
          pytest -vvvvv --tb=short tests
          resources/profile_queries.py

  test-build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
          fetch-depth: 0  # setuptools-scm needs to access git tags
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=min
          file: Dockerfile
          tags: ${{ env.CI_DOCKER_IMAGE_W_TAG }}


  # TODO: integration-tests w/ docker build for each python (need to add PYTHON_VER arg to Dockerfile)
  #       should run 'test_rest_server.py'


  #############################################################################
  # GIT TAG & GITHUB RELEASE
  #############################################################################

  tag-and-release:
    # only run on main/default branch
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    needs: [
      mongo-versions,
      py-versions,
      flake8,
      mypy,
      py-setup,
      py-dependencies,
      pip-install,
      unit-tests,
      test-build-docker,
      # integration-tests,
    ]
    uses: WIPACrepo/wipac-dev-workflows/.github/workflows/tag-and-release.yml@v1.14
    permissions: # for GITHUB_TOKEN
      contents: write
    with:
      project-type: python
      python-version: "${{ fromJSON(needs.py-versions.outputs.matrix)[0] }}"
      release-artifacts: |
        py-dependencies-logs
    secrets:
      TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # trigger tag-event gha workflows
